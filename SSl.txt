
Δημιουργεί ένα keystore και ένα key pair για χρήση με το Tomcat.
####################################################################################
# keytool -genkey -keysize 2048 -keyalg RSA -alias tomcat3 -keystore tomcat3.jks
####################################################################################

keytool: Αυτή είναι η εντολή του command line για τη διαχείριση των keystores και πιστοποιητικών στο περιβάλλον Java.
-genkey: Αυτή η επιλογή χρησιμοποιείται για τη δημιουργία ενός νέου ζεύγους κλειδιών (δημόσιο και ιδιωτικό κλειδί).
keysize 2048: Αυτό καθορίζει το μέγεθος του κλειδιού, που ορίζεται σε 2048 bits.
-keyalg RSA: Αυτό καθορίζει τον αλγόριθμο κλειδιού που θα χρησιμοποιηθεί.
-alias tomcat1: Αυτό καθορίζει το ψευδώνυμο (alias) που θα χρησιμοποιηθεί για το ζεύγος των κλειδιών.
-keystore tomcat1.jks: Αυτό καθορίζει το όνομα του keystore που θα δημιουργηθεί kai to pou.

MPORW NA EXW ENA keystore MONO KAI NA VAZW MESA EKEI OLA TA KLIDIA OXI ENA KEYSTORE GIA KATHE KLIDI
---------------------------------------------------------------------------------------------------



####################################################################################
####################################################################################
####################################################################################
keytool -genkeypair -keyalg RSA -keysize 2048 -storetype JKS -keystore keystore.jks -validity 365 -alias mycert -dname "CN=Your Organization" -ext san=dns:*.ewildcard.gr

####################################################################################
####################################################################################
####################################################################################


μετατρέψετε ένα keystore από τον τύπο JKS (Java Keystore) σε τον τύπο PKCS12
###################################################################################################
keytool -importkeystore -srckeystore tomcat3.jks -destkeystore tomcat3.jks -deststoretype pkcs12
###################################################################################################

Χρησιμοποιεί τον υπάρχον keystore tomcat3.jks ως πηγή (-srckeystore).
Δημιουργεί ένα νέο keystore tomcat3.jks ως προορισμό (-destkeystore).
Μετατρέπει τον τύπο αποθήκευσης από JKS σε PKCS12 χρησιμοποιώντας το deststoretype pkcs12.









Export the .crt self-signed certificate using the below command
#####################################################################################################################
keytool -export -alias tomcat3 -keystore tomcat3.jks -file tomcat5.crt
#####################################################################################################################
------------------------------------------------------------------------------------------------------------

Αυτή η εντολή θα δημιουργήσει ένα Αίτημα Έκδοσης Πιστοποιητικού (CSR), το οποίο μπορείτε να χρησιμοποιήσετε για να αιτηθείτε την έκδοση ενός ψηφιακού πιστοποιητικού από μια αρχή πιστοποίησης.
Αιτήματος Έκδοσης Πιστοποιητικού (CSR) χρησιμοποιώντας το ζεύγος κλειδιών που αποθηκεύεται στο αποθετήριο "tomcat1.jks".


Το αρχείο με κατάληξη .crt περιέχει το ίδιο το πιστοποιητικό (certificate) που έχει υπογραφεί από μια Αρχή Πιστοποίησης (CA). Αυτό είναι το πιστοποιητικό που χρησιμοποιείται για να αποδείξει την αυθεντικότητα ενός διακομιστή ή ενός ιστότοπου σε μια συνεδρία HTTPS. Τα αρχεία .crt περιέχουν τη δημόσια κλειδί επικύρωσης και το ψηφιακά υπογεγραμμένο πιστοποιητικό.







Einai to puplic key pou stelnw ston CA gia na mou stilei ena crt
###########################################################################################
# sudo keytool -certreq -keyalg RSA -alias tomcat1 -keystore tomcat1.jks -file tomcat1.csr
###########################################################################################

.crt (Certificate):
-certreq: Αυτή η επιλογή καθορίζει ότι θέλετε να δημιουργήσετε ένα Αίτημα Έκδοσης Πιστοποιητικού (CSR).
-keyalg RSA: Αυτό καθορίζει τον αλγόριθμο του κλειδιού που θα χρησιμοποιηθεί, ο οποίος είναι RSA σε αυτήν την περίπτωση.
-alias tomcat1: Αυτό καθορίζει το ψευδώνυμο του ζεύγους κλειδιών για το οποίο θέλετε να δημιουργήσετε το CSR.
-keystore tomcat1.jks: Αυτό καθορίζει το αρχείο αποθετηρίου από το οποίο θα ανακτήσετε το ζεύγος κλειδιών. Σε αυτήν την εντολή, χρησιμοποιείται το "tomcat1.jks" ως το αρχείο αποθετηρίου.

.csr (Certificate Signing Request):
Το αρχείο με κατάληξη .csr περιέχει το αίτημα για υπογραφή ενός πιστοποιητικού από μια Αρχή Πιστοποίησης (CA). Συνήθως, δημιουργείται από τον διακομιστή (server) και περιέχει τη δημόσια του κλειδί και πληροφορίες σχετικά με τον διακομιστή. Το αίτημα CSR στέλνεται στην CA για υπογραφή, και έπειτα από την υπογραφή της CA, λαμβάνετε το αντίστοιχο πιστοποιητικό .crt.

Afou to dimipourgisw vlepw oti mesa tou einiai ena pub key kai to stelnw opos einai stin selida tou CA gia na mou stilei ena crt.
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------


AN THELW NA DIAGRAPSW ENA PISTOPIITIKO MESA APO  TO KEYSTORE PX TO PALIO POU THA EXEI IDIO ALIAS KAI NA VALW TO KAINOURIO
###################################################################################################
# keytool -delete -alias your_cert_alias -keystore tomcat1.jks
###################################################################################################

Diagrafei to cert apo to alias kai fevgei etsi olo to klidi
meta mporoume na kanoume import to klidi pou exoume me to idio alias








GIA NA PROSTHESW ENA CERT STO IDI IPARXON KEYSTORE pou emeis ftiaksame
###################################################################################################
# keytool -import -alias your_cert_alias -file new_certificate.crt -keystore tomcat3.jks
###################################################################################################











APO ORGANISMO (CA)
Με αυτήν την εντολή, εισάγετε το πιστοποιητικό αξιοπιστίας (CA) στο keystore με το ψευδώνυμο "tomcat1maincert" και μπορείτε να το χρησιμοποιήσετε για ασφαλείς επικοινωνίες στο πλαίσιο του Tomcat ή άλλων εφαρμογών που χρειάζονται πιστοποιητικά.

Vazw to cert pou mas edosan sto keystore mas
###################################################################################################
# keytool -import -trustcacerts -alias tomcat5 -file new_certificate.crt -keystore tomcat3.jks 
###################################################################################################

keytool: Αυτή είναι η εργαλειοθήκη γραμμής εντολής για τη διαχείριση των αποθετηρίων κλειδιών και πιστοποιητικών στο Java.
-import: Αυτή η επιλογή χρησιμοποιείται για την εισαγωγή ενός πιστοποιητικού στο keystore.
-trustcacerts: Αυτή η επιλογή υποδηλώνει ότι το πιστοποιητικό που εισάγετε είναι ένα πιστοποιητικό αξιοπιστίας (CA) και πρέπει να εμπιστεύεστε τα πιστοποιητικά του εκδότη (CA).
-alias tomcat1maincert: Αυτό το ψευδώνυμο (alias) αντιστοιχεί στο πιστοποιητικό που θα εισαχθεί στο keystore.
-keystore tomcat1: Αυτό καθορίζει το όνομα του keystore όπου θα γίνει η εισαγωγή του πιστοποιητικού.
-file /etc/ssl/certificate.cer: Αυτό καθορίζει το αρχείο πιστοποιητικού που θα εισαχθεί στο keystore. Στην περίπτωσή σας, το πιστοποιητικό βρίσκεται στο αρχείο "/etc/ssl/certificate.cer".






Epalithefsh oti eginan ola kala
######################################################################################
keytool -list -v -keystore tomcat1.jks
######################################################################################






######################################################################################
######################################################################################
######################################################################################
------------------------------------------------------------------------------------------------------------
Meta alazw to tomcat/conf/server.xml
sto connector to

<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
    maxThreads="150" scheme="https" secure="true"
    keystoreFile="/path/to/keystore.jks"
    keystorePass="your_keystore_password"
    clientAuth="false" sslProtocol="TLS" />









Επανεκκίνηση του Tomcat: Επανεκκινήστε τον Tomcat για να εφαρμοστούν οι αλλαγές.
------------------------------------------------------------------------------------------------------------
######################################################################################
######################################################################################
######################################################################################
ps aux | grep tomcat
kill -9 18246
cd /opt/tomcat/bin/startup/sh





###########################
###########################
###########################
###########################
###########################
###########################
MORFES PISTOPIITIKWN

.crt: Συνήθως, τα αρχεία με επέκταση .crt περιέχουν το πιστοποιητικό (certificate) σε μορφή X.509. Αυτό είναι το πραγματικό πιστοποιητικό που χρησιμοποιείται για ασφαλή επικοινωνία.

.pfx ή .p12: Τα αρχεία με αυτές τις επεκτάσεις περιέχουν το πιστοποιητικό μαζί με τον ιδιωτικό κλειδί. Είναι επίσης γνωστά ως PKCS#12 αρχεία και συνήθως προστατεύονται με κωδικό πρόσβασης.

.cer: Αυτή η επέκταση χρησιμοποιείται επίσης για αρχεία πιστοποιητικών, και συνήθως περιέχουν το πιστοποιητικό με τη μορφή X.509.

###########################
###########################
###########################
###########################
###########################
###########################




DIMIOURGIA WILDCARD

vim openssl.cnf


[ req ]
default_bits = 2048
distinguished_name = req_distinguished_name
req_extensions = v3_req

[ req_distinguished_name ]
C = GR
ST = Serres
L = Serres
O = Your Organization
OU = Development
CN = *.wildcard.gr

[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = digitalSignature, keyEncipherment
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = *.wildcard.gr




# openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout wildcard.key -out wildcard.crt -config openssl.cnf

DIMIOURGITHIKAN TA WILDCARDS TWRA


Ta vazw ssto key store
keytool -import -trustcacerts -alias wildcard -file wildcard.crt -keystore wildcard.jks
keytool -importkeystore -srckeystore wildcard.jks -destkeystore wildcard.jks -deststoretype pkcs12


kai alazw to server.xml
<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
           maxThreads="150" scheme="https" secure="true"
           clientAuth="false" sslProtocol="TLS"
           keystoreFile="/path/to/your/wildcard.jks" <!-- Αντικαταστήστε τη διαδρομή -->
           keystorePass="your_keystore_password" />

restart to tomcat kai prepi na paksei.



