2 Types of Nodes 
Manager: Maintain CLuster, Management Task, Knows the status off all nodes.
Worker : Recieve and Execute tasks from manager node

Serveces can be deploy and accessed by any node of same cluster
Wile create a searvice the user should specify wich conatainer image to use
Global serveces will run on every Swarm node
In replicated serveces the manager distributes task to worker nodes

Service is a description of a task 
task does the work
When a task is assigne to a node it canot assigned to another node (1 task = 1 node)


Mporoun na iparxoun poloi manager alla enas tha einai o primary kai oi ypolipoi tha einai oi secondary

--------------------------------------------------------------------------------
ELEGXOS AN YPRXEI DOCKER SWARM STON NODE
---------------------------------------
# docker info | grep Swarm
# docker node ls
# docker node inspect j4kqtur871xdolh10lebf94o0
# docker stack ls
# docker stack ps (onoma tou stack)
# docker service ls
# docker service ps (onoma tou service)
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
MANAGER H WORKER
Gia na dw an yparxei swarm egkatestimeno
docker info

Swarm: active
 NodeID: abcdef123456
 Is Manager: true
 Managers: 3
 Nodes: 5

 Swarm: inactive

--------------------------------------------------------------------------------


MANAGER
--------------------------------------------------------------------------------
Αρχικοποιεί έναν νέο Swarm και καθορίζει τον τρέχοντα Docker host ως manager.
# sudo docker swarm init --advertise-addr <MANAGER-IP>


        Swarm initialized: current node (0uwjerp2675jijusouhpam88u) is now a manager.
        To add a worker to this swarm, run the following command:
            docker swarm join --token SWMTKN-1-208rlpxbo6jg4z4k10a9bx9rcyso178w7skofjmkqpbio3m5b8-a5fyxznr56r39ujo8mdab3foo 192.168.1.100:2377
        To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.


AN THELEIS NA VLALEIS KAI ALON MASTER NODE
# docker swarm join-token manager
# docker swarm join --token SWMTKN-1-208rlpxbo6jg4z4k10a9bx9rcyso178w7skofjmkqpbio3m5b8-8y0djov2nj6tetug2ugjrz14x <IP tou neou manager>:2377

--------------------------------------------------------------------------------
WORKER
PAW STON NODE POU THELW  EINAI O WORKER KAI TO EKTELW GIA NA GINEI O WORKER NODE

An den thimame to token tou worker paw ston manager kai grafw afto  docker swarm join-token worker kai pairnw to token
# docker swarm join --token SWMTKN-1-208rlpxbo6jg4z4k10a9bx9rcyso178w7skofjmkqpbio3m5b8-a5fyxznr56r39ujo8mdab3foo 192.168.1.100:2377

# docker swarm leave










--------------------------------------------------------------------------------
MANAGER
DIMIOURGIA SERVICE
# sudo docker node ls
genika mono nse afton pou trexei
# docker service create --replicas 1 --name my-nginx -p 80:80 nginx
gia global
# docker service create --name my-global-nginx --mode global -p 80:80 nginx
gia enan node
# docker service create --name my-nginx --constraint 'node.id==abcdef123456' -p 80:80 nginx



# docker container ls
# docker service ls
# docker service inspect lxbfk2z0au52 --pretty
# docker service ps lxbfk2z0au52


Gia na kanw to service scale
# docker service scale my-nginx=5
# docker service scale my_service=3

# docker service ps my-nginx

# docker service rm my-nginx
--------------------------------------------------------------------------------

WORKER
GIA NA TON VGALW APO TO Swarm
# docker node ls
# docker swarm leave
# docker node rm abcdef123456





--------------------------------------------------------------------------------
PROMOTE A NODE TO MASTER NODE
# docker node ls
Pernw to ID aftou pou thelw na ton kanw master molis to kanw tha doksei oti einai reachable
# docker node promote j4kqtur871xdolh10lebf94o0

μειώnei τον ρόλο ενός κόμβου (node) από manager σε worker
# docker node demote j4kqtur871xdolh10lebf94o0
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
PROSTHETW LABLES
docker node update --label-add environment=production j4kqtur871xdolh10lebf94o0
docker node inspect j4kqtur871xdolh10lebf94o0


Diagrafh labl
docker node update --label-rm environment j4kqtur871xdolh10lebf94o0

--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
to kanw stop GIA NA KANW SINTIRISH
docker node update --availability=drain j4kqtur871xdolh10lebf94o0

gia epanafora
docker node update --availability=active j4kqtur871xdolh10lebf94o0


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Update an image tous replicas
# docker service ls

# docker service update --update-delay 10s --image nginx:latest my-nginx
# sudo systemctl restart docker
# docker service ps my-nginx --filter "desired-state=running"

--------------------------------------------------------------------------------
create NETWORKING for swarm
docker network ls
NETWORK ID     NAME              DRIVER    SCOPE
dcb9eda1d5ed   MacVlan_network   macvlan   local
ba3d37ce4892   bridge            bridge    local
c452f02cd061   docker_gwbridge   bridge    local
fc927a56fcd6   host              host      local
yw334g3aoxp3   ingress           overlay   swarm
f21535bab895   minikube          bridge    local
88bd9afb86e7   none              null      local

docker network inspect ingress

docker network create -d overlay my_overlay_network
docker service create --name my-nginx --network my_overlay_network -p 80:80 nginx

-------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------------------------------------------
STACK
einai san to docker-compose ksekinaei polla serveces mazi (dld otan lew stack enow polla serveces mazi sindedemena)
vim nginx.yml

version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    deploy:
      replicas: 6
    networks:
      - my-network

networks:
  my-network:
    driver: overlay







docker stack deploy -c nginx.yml my-nginx-stack
docker network ls 
docker stack ls
docker stack ps my-nginx-stack

docker stack rm my-nginx-stack


-------------------------------------------------------------------------------------------------------------------------------------
-------------------

AN THELW ME DOCKER compose

# vim docker-compose.yml
version: '3.8'

services:
  web:
    image: nginx
    ports:
      - "80:80"
  redis:
    image: redis:alpine

-----------------------
afto einai paromio me to docker compose update alla se swarm dimiourgei ta servicers pou exei to docker compose mesa tou

# docker stack deploy -c docker-compose.yml my_stack

# docker stack ls
# docker service ls


STACK
μια λογική οντότητα που περιέχει πολλαπλές υπηρεσίες και μπορεί να αναπτυχθεί σε ένα Docker Swarm.
vlepoume ta services pou iparxoun mesa sto stack
# docker stack service (onoma tou stack )


