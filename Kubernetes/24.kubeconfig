
Το αρχείο kubeconfig είναι ένα αρχείο ρυθμίσεων που χρησιμοποιείται για να διαχειρίζεται τη σύνδεση με το Kubernetes cluster. Περιέχει όλες τις απαραίτητες πληροφορίες για την επικοινωνία με το cluster, όπως οι παραμέτρους σύνδεσης, τα διαπιστευτήρια, και η τοποθεσία του cluster.

Η δομή του περιλαμβάνει τρία βασικά μέρη:

Clusters: Πληροφορίες για το Kubernetes cluster, όπως το URL του API server και τα πιστοποιητικά που απαιτούνται για την επικοινωνία με το cluster.

Users: Διαπιστευτήρια και πληροφορίες ταυτοποίησης για τους χρήστες που έχουν πρόσβαση στο cluster. Αυτό περιλαμβάνει token, πιστοποιητικά ή άλλα στοιχεία ταυτοποίησης.

Contexts: Συνδυασμός cluster και χρήστη για να καθορίσει ποιο cluster και ποιο χρήστη χρησιμοποιεί το kubectl (ή άλλα εργαλεία) κατά την εκτέλεση εντολών. Το context είναι ουσιαστικά ένα "προφίλ" που μπορείς να επιλέξεις για να δουλέψεις με το σωστό cluster και χρήστη.

Το kubeconfig συνήθως βρίσκεται στο αρχείο ~/.kube/config στον υπολογιστή σου, αλλά μπορείς να χρησιμοποιήσεις και άλλες τοποθεσίες ή αρχεία αν το επιθυμείς.

Είναι κρίσιμο για τη διαχείριση του Kubernetes cluster, καθώς επιτρέπει σε εργαλεία όπως το kubectl να συνδέονται και να αλληλεπιδρούν με το cluster που επιθυμείς.


MAS LEEI DLD POIOS XRISTIS EXEI DIKAIOMATA NA SINDETHEI KAI SE PIO CLUSTER



To default config
echo $HOME
/root/.kube/config


Gia na dw ta
- cluster:
- contexts:
- users:


kubectl config view

-----------------------------------------------------------------------------------

gia na dw alo config oxi to default
kubectl config view --kubeconfig my-kube-config

apiVersion: v1
clusters:
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: development
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: kubernetes-on-aws
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: production
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: test-cluster-1
contexts:
- context:
    cluster: kubernetes-on-aws
    user: aws-user
  name: aws-user@kubernetes-on-aws
- context:
    cluster: test-cluster-1
    user: dev-user
  name: research
- context:
    cluster: development
    user: test-user
  name: test-user@development
- context:
    cluster: production
    user: test-user
  name: test-user@production
current-context: research
kind: Config
preferences: {}
users:
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/developer-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user/dev-user.key
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key



-----------------------------------------------------------------------------------

To use that context, run the command: 
kubectl config --kubeconfig=/root/my-kube-config use-context research

To know the current context, run the command: 
kubectl config --kubeconfig=/root/my-kube-config current-context

Set the my-kube-config file as the default kubeconfig by overwriting the content of ~/.kube/config with the content of the my-kube-config file.
cp my-kube-config ~/.kube/config